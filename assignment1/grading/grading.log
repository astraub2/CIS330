/bin/cp /cs/groupprojects/cis330/assignments/assignment1/master/g_Makefile . > /dev/null 2>&1
-----<< Problem 4-first: >>------
[2017-01-19 16:13:51.178856] gcc -std=c99 -c first.c
Inputs: 
STDOUT:

STDERR:
PASS
-----<< Problem 4-first: >>------
[2017-01-19 16:13:51.257935] /bin/rm -f first *.o && make -f g_Makefile first
Inputs: 
STDOUT:
gcc -Wall -std=c99 -o first first.c

STDERR:

Comparing against master output:
[2017-01-19 16:13:51.383390] diff -y -B -b first.output first.master
Inputs: 
STDOUT:
							      >	** Welcome to Thinking in C **
							      >	(You'll be glad you came!)

STDERR:

-----<< Problem 4-first: >>------
[2017-01-19 16:13:51.410501] numdiffs=`diff  -B -b first.output first.master | wc -l`
Inputs: 
STDOUT:

STDERR:
Found 0 differences (within acceptable tolerance)
PASS
-----<< Problem 4-avg: >>------
[2017-01-19 16:13:51.459955] gcc -std=c99 -c avg.c
Inputs: 
STDOUT:

STDERR:
PASS
-----<< Problem 4-avg: >>------
[2017-01-19 16:13:51.553670] /bin/rm -f avg *.o && make -f g_Makefile avg
Inputs: 
STDOUT:
gcc -Wall -std=c99 -o avg avg.c

STDERR:

-----<< Problem 4-avg: >>------
[2017-01-19 16:13:51.669206] ./avg
Inputs: 10
12

STDOUT:
Enter the 1st number:
Enter the 2nd number:
The average is 11.000000

STDERR:

-----<< Problem 4-avg: >>------
[2017-01-19 16:13:51.705801] ./avg
Inputs: 89
-3

STDOUT:
Enter the 1st number:
Enter the 2nd number:
The average is 43.000000

STDERR:

Comparing against master output:
[2017-01-19 16:13:51.747864] diff -y -B -b avg.output avg.master
Inputs: 
STDOUT:
Enter the 1st number:						Enter the 1st number:
Enter the 2nd number:						Enter the 2nd number:
The average is 11.000000					The average is 11.000000
Enter the 1st number:						Enter the 1st number:
Enter the 2nd number:						Enter the 2nd number:
The average is 43.000000					The average is 43.000000

STDERR:

-----<< Problem 4-avg: >>------
[2017-01-19 16:13:51.785399] numdiffs=`diff  -B -b avg.output avg.master | wc -l`
Inputs: 
STDOUT:

STDERR:
Found 0 differences (within acceptable tolerance)
PASS
-----<< Problem 4-sticks: >>------
[2017-01-19 16:13:51.853653] gcc -std=c99 -c sticks.c
Inputs: 
STDOUT:

STDERR:
PASS
-----<< Problem 4-sticks: >>------
[2017-01-19 16:13:51.960119] /bin/rm -f sticks *.o && make -f g_Makefile sticks
Inputs: 
STDOUT:
gcc -Wall -std=c99 -o sticks sticks.c

STDERR:
sticks.c: In function ‘getUserChoice’:
sticks.c:11:14: warning: comparison of constant ‘4’ with boolean expression is always true [-Wbool-compare]
   if(0<sticks<4){
              ^
sticks.c:11:7: warning: comparisons like ‘X<=Y<=Z’ do not have their mathematical meaning [-Wparentheses]
   if(0<sticks<4){
       ^
sticks.c: In function ‘getComputerChoice’:
sticks.c:25:24: warning: comparison of constant ‘5’ with boolean expression is always true [-Wbool-compare]
     if(1<current_sticks<5){
                        ^
sticks.c:25:9: warning: comparisons like ‘X<=Y<=Z’ do not have their mathematical meaning [-Wparentheses]
     if(1<current_sticks<5){
         ^
sticks.c: In function ‘main’:
sticks.c:53:25: warning: comparison of constant ‘100’ with boolean expression is always true [-Wbool-compare]
     if(10<=number_sticks<=100){
                         ^
sticks.c:53:10: warning: comparisons like ‘X<=Y<=Z’ do not have their mathematical meaning [-Wparentheses]
     if(10<=number_sticks<=100){
          ^
PASS
-----<< Problem 4-sticks: >>------
[2017-01-19 16:13:52.096109] ./sticks
Inputs: 13
3
3
2
1

STDOUT:
Welcome to the game of sticks!
How many sticks are there on the table initially (10-100)? 
Player 1: How many sticks do you take (1-3)?
There are 10 sticks on the board
The computer took 1 sticks 
There are 9 sticks on the board
Player 1: How many sticks do you take (1-3)?
There are 6 sticks on the board
The computer took 2 sticks 
There are 4 sticks on the board
Player 1: How many sticks do you take (1-3)?
There are 2 sticks on the board
The computer took 1 sticks 
There are 1 sticks on the board
Player 1: How many sticks do you take (1-3)?
You lost the game

STDERR:
PASS
Points: {'name': 'Straub, Amber M', '4-first': [5, 0, 5], '4-avg': [5, 0, 5], '4-sticks': [25, 0, 25], 'log': "\n====================> Straub, Amber M ; 4565/bin/cp /cs/groupprojects/cis330/assignments/assignment1/master/g_Makefile . > /dev/null 2>&1\n-----<< Problem 4-first: >>------\n[2017-01-19 16:13:51.178856] gcc -std=c99 -c first.c\nInputs: \nSTDOUT:\n\nSTDERR:\nPASS\n-----<< Problem 4-first: >>------\n[2017-01-19 16:13:51.257935] /bin/rm -f first *.o && make -f g_Makefile first\nInputs: \nSTDOUT:\ngcc -Wall -std=c99 -o first first.c\n\nSTDERR:\n\nComparing against master output:\n[2017-01-19 16:13:51.383390] diff -y -B -b first.output first.master\nInputs: \nSTDOUT:\n\t\t\t\t\t\t\t      >\t** Welcome to Thinking in C **\n\t\t\t\t\t\t\t      >\t(You'll be glad you came!)\n\nSTDERR:\n\n-----<< Problem 4-first: >>------\n[2017-01-19 16:13:51.410501] numdiffs=`diff  -B -b first.output first.master | wc -l`\nInputs: \nSTDOUT:\n\nSTDERR:\nFound 0 differences (within acceptable tolerance)\nPASS\n-----<< Problem 4-avg: >>------\n[2017-01-19 16:13:51.459955] gcc -std=c99 -c avg.c\nInputs: \nSTDOUT:\n\nSTDERR:\nPASS\n-----<< Problem 4-avg: >>------\n[2017-01-19 16:13:51.553670] /bin/rm -f avg *.o && make -f g_Makefile avg\nInputs: \nSTDOUT:\ngcc -Wall -std=c99 -o avg avg.c\n\nSTDERR:\n\n-----<< Problem 4-avg: >>------\n[2017-01-19 16:13:51.669206] ./avg\nInputs: 10\n12\n\nSTDOUT:\nEnter the 1st number:\nEnter the 2nd number:\nThe average is 11.000000\n\nSTDERR:\n\n-----<< Problem 4-avg: >>------\n[2017-01-19 16:13:51.705801] ./avg\nInputs: 89\n-3\n\nSTDOUT:\nEnter the 1st number:\nEnter the 2nd number:\nThe average is 43.000000\n\nSTDERR:\n\nComparing against master output:\n[2017-01-19 16:13:51.747864] diff -y -B -b avg.output avg.master\nInputs: \nSTDOUT:\nEnter the 1st number:\t\t\t\t\t\tEnter the 1st number:\nEnter the 2nd number:\t\t\t\t\t\tEnter the 2nd number:\nThe average is 11.000000\t\t\t\t\tThe average is 11.000000\nEnter the 1st number:\t\t\t\t\t\tEnter the 1st number:\nEnter the 2nd number:\t\t\t\t\t\tEnter the 2nd number:\nThe average is 43.000000\t\t\t\t\tThe average is 43.000000\n\nSTDERR:\n\n-----<< Problem 4-avg: >>------\n[2017-01-19 16:13:51.785399] numdiffs=`diff  -B -b avg.output avg.master | wc -l`\nInputs: \nSTDOUT:\n\nSTDERR:\nFound 0 differences (within acceptable tolerance)\nPASS\n-----<< Problem 4-sticks: >>------\n[2017-01-19 16:13:51.853653] gcc -std=c99 -c sticks.c\nInputs: \nSTDOUT:\n\nSTDERR:\nPASS\n-----<< Problem 4-sticks: >>------\n[2017-01-19 16:13:51.960119] /bin/rm -f sticks *.o && make -f g_Makefile sticks\nInputs: \nSTDOUT:\ngcc -Wall -std=c99 -o sticks sticks.c\n\nSTDERR:\nsticks.c: In function \xe2\x80\x98getUserChoice\xe2\x80\x99:\nsticks.c:11:14: warning: comparison of constant \xe2\x80\x984\xe2\x80\x99 with boolean expression is always true [-Wbool-compare]\n   if(0<sticks<4){\n              ^\nsticks.c:11:7: warning: comparisons like \xe2\x80\x98X<=Y<=Z\xe2\x80\x99 do not have their mathematical meaning [-Wparentheses]\n   if(0<sticks<4){\n       ^\nsticks.c: In function \xe2\x80\x98getComputerChoice\xe2\x80\x99:\nsticks.c:25:24: warning: comparison of constant \xe2\x80\x985\xe2\x80\x99 with boolean expression is always true [-Wbool-compare]\n     if(1<current_sticks<5){\n                        ^\nsticks.c:25:9: warning: comparisons like \xe2\x80\x98X<=Y<=Z\xe2\x80\x99 do not have their mathematical meaning [-Wparentheses]\n     if(1<current_sticks<5){\n         ^\nsticks.c: In function \xe2\x80\x98main\xe2\x80\x99:\nsticks.c:53:25: warning: comparison of constant \xe2\x80\x98100\xe2\x80\x99 with boolean expression is always true [-Wbool-compare]\n     if(10<=number_sticks<=100){\n                         ^\nsticks.c:53:10: warning: comparisons like \xe2\x80\x98X<=Y<=Z\xe2\x80\x99 do not have their mathematical meaning [-Wparentheses]\n     if(10<=number_sticks<=100){\n          ^\nPASS\n-----<< Problem 4-sticks: >>------\n[2017-01-19 16:13:52.096109] ./sticks\nInputs: 13\n3\n3\n2\n1\n\nSTDOUT:\nWelcome to the game of sticks!\nHow many sticks are there on the table initially (10-100)? \nPlayer 1: How many sticks do you take (1-3)?\nThere are 10 sticks on the board\nThe computer took 1 sticks \nThere are 9 sticks on the board\nPlayer 1: How many sticks do you take (1-3)?\nThere are 6 sticks on the board\nThe computer took 2 sticks \nThere are 4 sticks on the board\nPlayer 1: How many sticks do you take (1-3)?\nThere are 2 sticks on the board\nThe computer took 1 sticks \nThere are 1 sticks on the board\nPlayer 1: How many sticks do you take (1-3)?\nYou lost the game\n\nSTDERR:\nPASS"}
ENDSTUDENT Straub, Amber M

